<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>luna_stay</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>player</parentName>
  <maskName>player_mask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>bessmertie</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>dir = 1;              
xspeed = 0.0;          
yspeed = 0.0;         
xmaxspeed = global.movespeed;     
ymaxspeed = 40.0;      
weight = global.playergravity;         
accel = 2;          
xfriction = 0.3;       
jumpHeight = global.jumpheight;     

maxDoubleJumps = 0;     
availableJumps = 0;    
canDoubleJump = false; 

isJumping = false;     
 
landing_max = 10;             
landing = 0;         

flashlight=0;
t = 0;
dontdrawarms=0;

//xsc=1
//ysc=1
//drawxsc=0
//drawysc=0

hatscale=1

canmove=true
hatindex=0
slidealpha=0

//startframes=0
stopframes=0
startframes=0
canturn=true
brake=-1
drake=0
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>eyetimer=0
double_jump=1
shuffletimer=0
if instance_exists(player) and !instance_exists(chararm)
{
instance_create(x+0,y+0,chararm)
}
eyeindex=0
wingstimer=0
eyehurt=0

umbrella=false
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Head
if image_xscale&gt;0
{
ycor[0, 0] = -36; xcor[0, 0] = 0;

ycor[1, 0] = -36; xcor[1, 0] = 0;

ycor[2, 0] = -33; xcor[2, 0] = +5;
ycor[2, 1] = -33; xcor[2, 1] = +5;
ycor[2, 2] = -33; xcor[2, 2] = +5;
ycor[2, 3] = -34; xcor[2, 3] = +5;
ycor[2, 4] = -35; xcor[2, 4] = +5;
ycor[2, 5] = -36; xcor[2, 5] = +5;
ycor[2, 6] = -35; xcor[2, 6] = +5;
ycor[2, 7] = -34; xcor[2, 7] = +5;
ycor[2, 8] = -33; xcor[2, 8] = +5;
ycor[2, 9] = -33; xcor[2, 9] = +5;
ycor[2, 10] = -33; xcor[2, 10] = +5;
ycor[2, 11] = -34; xcor[2, 11] = +5;
ycor[2, 12] = -35; xcor[2, 12] = +5;
ycor[2, 13] = -36; xcor[2, 13] = +5;
ycor[2, 14] = -35; xcor[2, 14] = +5;
ycor[2, 15] = -34; xcor[2, 15] = +5;

ycor[3, 0] = -33; xcor[3, 0] = +5;
ycor[3, 1] = -33; xcor[3, 1] = +5;
ycor[3, 2] = -33; xcor[3, 2] = +5;
ycor[3, 3] = -34; xcor[3, 3] = +5;
ycor[3, 4] = -35; xcor[3, 4] = +5;
ycor[3, 5] = -36; xcor[3, 5] = +5;
ycor[3, 6] = -35; xcor[3, 6] = +5;
ycor[3, 7] = -34; xcor[3, 7] = +5;
ycor[3, 8] = -33; xcor[3, 8] = +5;
ycor[3, 9] = -33; xcor[3, 9] = +5;
ycor[3, 10] = -33; xcor[3, 10] = +5;
ycor[3, 11] = -34; xcor[3, 11] = +5;
ycor[3, 12] = -35; xcor[3, 12] = +5;
ycor[3, 13] = -36; xcor[3, 13] = +5;
ycor[3, 14] = -35; xcor[3, 14] = +5;
ycor[3, 15] = -34; xcor[3, 15] = +5;

ycor[4, 0] = -40; xcor[4, 0] = +0;
ycor[4, 1] = -40; xcor[4, 1] = +0;
ycor[4, 2] = -40; xcor[4, 2] = +0;
ycor[4, 3] = -40; xcor[4, 3] = +0;
ycor[4, 4] = -40; xcor[4, 4] = +0;
ycor[4, 5] = -40; xcor[4, 5] = +0;
ycor[4, 6] = -40; xcor[4, 6] = +0;

ycor[5, 0] = -40; xcor[5, 0] = +0;
ycor[5, 1] = -40; xcor[5, 1] = +0;
ycor[5, 2] = -40; xcor[5, 2] = +0;
ycor[5, 3] = -40; xcor[5, 3] = +0;
ycor[5, 4] = -40; xcor[5, 4] = +0;
ycor[5, 5] = -40; xcor[5, 5] = +0;
ycor[5, 6] = -40; xcor[5, 6] = +0;

ycor[6, 0] = -36; xcor[6, 0] = 0;
ycor[6, 1] = -36; xcor[6, 1] = 0;
ycor[6, 2] = -36; xcor[6, 2] = 0;
ycor[6, 3] = -37; xcor[6, 3] = 0;
ycor[6, 4] = -37; xcor[6, 4] = 0;
ycor[6, 5] = -37; xcor[6, 5] = 0;
ycor[6, 6] = -37; xcor[6, 6] = 0;
ycor[6, 7] = -37; xcor[6, 7] = 0;
ycor[6, 8] = -37; xcor[6, 8] = 0;
ycor[6, 9] = -37; xcor[6, 9] = 0;
ycor[6, 10] = -37; xcor[6, 10] = 0;
ycor[6, 11] = -36; xcor[6, 11] = 0;
ycor[6, 12] = -36; xcor[6, 12] = 0;

ycor[7, 0] = -36; xcor[7, 0] = 0;

ycor[8, 0] = -33; xcor[8, 0] = +5;
ycor[8, 1] = -33; xcor[8, 1] = +5;
ycor[8, 2] = -33; xcor[8, 2] = +5;
ycor[8, 3] = -34; xcor[8, 3] = +5;
ycor[8, 4] = -35; xcor[8, 4] = +5;
ycor[8, 5] = -36; xcor[8, 5] = +5;
ycor[8, 6] = -35; xcor[8, 6] = +5;
ycor[8, 7] = -34; xcor[8, 7] = +5;
ycor[8, 8] = -33; xcor[8, 8] = +5;
ycor[8, 9] = -33; xcor[8, 9] = +5;
ycor[8, 10] = -33; xcor[8, 10] = +5;
ycor[8, 11] = -34; xcor[8, 11] = +5;
ycor[8, 12] = -35; xcor[8, 12] = +5;
ycor[8, 13] = -36; xcor[8, 13] = +5;
ycor[8, 14] = -35; xcor[8, 14] = +5;
ycor[8, 15] = -34; xcor[8, 15] = +5;

ycor[9, 0] = -40; xcor[9, 0] = +0;
ycor[9, 1] = -40; xcor[9, 1] = +0;
ycor[9, 2] = -40; xcor[9, 2] = +0;
ycor[9, 3] = -40; xcor[9, 3] = +0;
ycor[9, 4] = -40; xcor[9, 4] = +0;
ycor[9, 5] = -40; xcor[9, 5] = +0;
ycor[9, 6] = -40; xcor[9, 6] = +0;

ycor[10, 0] = -36; xcor[10, 0] = 0;
ycor[10, 1] = -34; xcor[10, 1] = +4;
ycor[10, 2] = -35; xcor[10, 2] = +5;
ycor[10, 3] = -36; xcor[10, 3] = +5;
ycor[10, 4] = -35; xcor[10, 4] = +5;
ycor[10, 5] = -33; xcor[10, 5] = +5;
ycor[10, 6] = -36; xcor[10, 6] = +5;
ycor[10, 7] = -34; xcor[10, 7] = +3;
ycor[10, 8] = -30; xcor[10, 8] = -6;
ycor[10, 9] = -34; xcor[10, 9] = -3;
ycor[10, 10] = -36; xcor[10, 10] = +0;

ycor[11, 0] = -36; xcor[11, 0] = 0;
ycor[11, 1] = -34; xcor[11, 1] = +4;
ycor[11, 2] = -35; xcor[11, 2] = +5;
ycor[11, 3] = -36; xcor[11, 3] = +5;
ycor[11, 4] = -35; xcor[11, 4] = +5;
ycor[11, 5] = -33; xcor[11, 5] = +5;
ycor[11, 6] = -36; xcor[11, 6] = +5;
ycor[11, 7] = -34; xcor[11, 7] = +3;
ycor[11, 8] = -30; xcor[11, 8] = -6;
ycor[11, 9] = -34; xcor[11, 9] = -3;
ycor[11, 10] = -36; xcor[11, 10] = +0;

ycor[12, 0] = -36; xcor[12, 0] = 0;
ycor[12, 1] = -34; xcor[12, 1] = +4;
ycor[12, 2] = -35; xcor[12, 2] = +5;
ycor[12, 3] = -36; xcor[12, 3] = +5;
ycor[12, 4] = -35; xcor[12, 4] = +5;
ycor[12, 5] = -33; xcor[12, 5] = +5;
ycor[12, 6] = -36; xcor[12, 6] = +5;
ycor[12, 7] = -34; xcor[12, 7] = +3;
ycor[12, 8] = -30; xcor[12, 8] = -6;
ycor[12, 9] = -34; xcor[12, 9] = -3;
ycor[12, 10] = -36; xcor[12, 10] = +0;

ycor[13, 0] = -41; xcor[13, 0] = 0;
ycor[13, 1] = -41; xcor[13, 1] = 0;
ycor[13, 2] = -41; xcor[13, 2] = 0;
ycor[13, 3] = -42; xcor[13, 3] = 0;
ycor[13, 4] = -42; xcor[13, 4] = 0;
ycor[13, 5] = -42; xcor[13, 5] = 0;
ycor[13, 6] = -42; xcor[13, 6] = 0;
ycor[13, 7] = -42; xcor[13, 7] = 0;
ycor[13, 8] = -42; xcor[13, 8] = 0;
ycor[13, 9] = -42; xcor[13, 9] = 0;
ycor[13, 10] = -42; xcor[13, 10] = 0;
ycor[13, 11] = -41; xcor[13, 11] = 0;
ycor[13, 12] = -41; xcor[13, 12] = 0;
}


if image_xscale&lt;0
{
ycor[0, 0] = -36; xcor[0, 0] = 0;

ycor[1, 0] = -36; xcor[1, 0] = 0;

ycor[2, 0] = -33; xcor[2, 0] = -5;
ycor[2, 1] = -33; xcor[2, 1] = -5;
ycor[2, 2] = -33; xcor[2, 2] = -5;
ycor[2, 3] = -34; xcor[2, 3] = -5;
ycor[2, 4] = -35; xcor[2, 4] = -5;
ycor[2, 5] = -36; xcor[2, 5] = -5;
ycor[2, 6] = -35; xcor[2, 6] = -5;
ycor[2, 7] = -34; xcor[2, 7] = -5;
ycor[2, 8] = -33; xcor[2, 8] = -5;
ycor[2, 9] = -33; xcor[2, 9] = -5;
ycor[2, 10] = -33; xcor[2, 10] = -5;
ycor[2, 11] = -34; xcor[2, 11] = -5;
ycor[2, 12] = -35; xcor[2, 12] = -5;
ycor[2, 13] = -36; xcor[2, 13] = -5;
ycor[2, 14] = -35; xcor[2, 14] = -5;
ycor[2, 15] = -34; xcor[2, 15] = -5;

ycor[3, 0] = -33; xcor[3, 0] = -5;
ycor[3, 1] = -33; xcor[3, 1] = -5;
ycor[3, 2] = -33; xcor[3, 2] = -5;
ycor[3, 3] = -34; xcor[3, 3] = -5;
ycor[3, 4] = -35; xcor[3, 4] = -5;
ycor[3, 5] = -36; xcor[3, 5] = -5;
ycor[3, 6] = -35; xcor[3, 6] = -5;
ycor[3, 7] = -34; xcor[3, 7] = -5;
ycor[3, 8] = -33; xcor[3, 8] = -5;
ycor[3, 9] = -33; xcor[3, 9] = -5;
ycor[3, 10] = -33; xcor[3, 10] = -5;
ycor[3, 11] = -34; xcor[3, 11] = -5;
ycor[3, 12] = -35; xcor[3, 12] = -5;
ycor[3, 13] = -36; xcor[3, 13] = -5;
ycor[3, 14] = -35; xcor[3, 14] = -5;
ycor[3, 15] = -34; xcor[3, 15] = -5;

ycor[4, 0] = -40; xcor[4, 0] = +0;
ycor[4, 1] = -40; xcor[4, 1] = +0;
ycor[4, 2] = -40; xcor[4, 2] = +0;
ycor[4, 3] = -40; xcor[4, 3] = +0;
ycor[4, 4] = -40; xcor[4, 4] = +0;
ycor[4, 5] = -40; xcor[4, 5] = +0;
ycor[4, 6] = -40; xcor[4, 6] = +0;

ycor[5, 0] = -40; xcor[5, 0] = +0;
ycor[5, 1] = -40; xcor[5, 1] = +0;
ycor[5, 2] = -40; xcor[5, 2] = +0;
ycor[5, 3] = -40; xcor[5, 3] = +0;
ycor[5, 4] = -40; xcor[5, 4] = +0;
ycor[5, 5] = -40; xcor[5, 5] = +0;
ycor[5, 6] = -40; xcor[5, 6] = +0;

ycor[6, 0] = -36; xcor[6, 0] = 0;
ycor[6, 1] = -36; xcor[6, 1] = 0;
ycor[6, 2] = -36; xcor[6, 2] = 0;
ycor[6, 3] = -37; xcor[6, 3] = 0;
ycor[6, 4] = -37; xcor[6, 4] = 0;
ycor[6, 5] = -37; xcor[6, 5] = 0;
ycor[6, 6] = -37; xcor[6, 6] = 0;
ycor[6, 7] = -37; xcor[6, 7] = 0;
ycor[6, 8] = -37; xcor[6, 8] = 0;
ycor[6, 9] = -37; xcor[6, 9] = 0;
ycor[6, 10] = -37; xcor[6, 10] = 0;
ycor[6, 11] = -36; xcor[6, 11] = 0;
ycor[6, 12] = -36; xcor[6, 12] = 0;

ycor[7, 0] = -36; xcor[7, 0] = 0;

ycor[8, 0] = -33; xcor[8, 0] = -5;
ycor[8, 1] = -33; xcor[8, 1] = -5;
ycor[8, 2] = -33; xcor[8, 2] = -5;
ycor[8, 3] = -34; xcor[8, 3] = -5;
ycor[8, 4] = -35; xcor[8, 4] = -5;
ycor[8, 5] = -36; xcor[8, 5] = -5;
ycor[8, 6] = -35; xcor[8, 6] = -5;
ycor[8, 7] = -34; xcor[8, 7] = -5;
ycor[8, 8] = -33; xcor[8, 8] = -5;
ycor[8, 9] = -33; xcor[8, 9] = -5;
ycor[8, 10] = -33; xcor[8, 10] = -5;
ycor[8, 11] = -34; xcor[8, 11] = -5;
ycor[8, 12] = -35; xcor[8, 12] = -5;
ycor[8, 13] = -36; xcor[8, 13] = -5;
ycor[8, 14] = -35; xcor[8, 14] = -5;
ycor[8, 15] = -34; xcor[8, 15] = -5;

ycor[9, 0] = -40; xcor[9, 0] = +0;
ycor[9, 1] = -40; xcor[9, 1] = +0;
ycor[9, 2] = -40; xcor[9, 2] = +0;
ycor[9, 3] = -40; xcor[9, 3] = +0;
ycor[9, 4] = -40; xcor[9, 4] = +0;
ycor[9, 5] = -40; xcor[9, 5] = +0;
ycor[9, 6] = -40; xcor[9, 6] = +0;

ycor[10, 0] = -36; xcor[10, 0] = 0;
ycor[10, 1] = -34; xcor[10, 1] = -4;
ycor[10, 2] = -35; xcor[10, 2] = -5;
ycor[10, 3] = -36; xcor[10, 3] = -5;
ycor[10, 4] = -35; xcor[10, 4] = -5;
ycor[10, 5] = -33; xcor[10, 5] = -5;
ycor[10, 6] = -36; xcor[10, 6] = -5;
ycor[10, 7] = -34; xcor[10, 7] = -3;
ycor[10, 8] = -30; xcor[10, 8] = +6;
ycor[10, 9] = -34; xcor[10, 9] = +3;
ycor[10, 10] = -36; xcor[10, 10] = 0;

ycor[11, 0] = -36; xcor[11, 0] = 0;
ycor[11, 1] = -34; xcor[11, 1] = -4;
ycor[11, 2] = -35; xcor[11, 2] = -5;
ycor[11, 3] = -36; xcor[11, 3] = -5;
ycor[11, 4] = -35; xcor[11, 4] = -5;
ycor[11, 5] = -33; xcor[11, 5] = -5;
ycor[11, 6] = -36; xcor[11, 6] = -5;
ycor[11, 7] = -34; xcor[11, 7] = -3;
ycor[11, 8] = -30; xcor[11, 8] = -6;
ycor[11, 9] = -34; xcor[11, 9] = -3;
ycor[11, 10] = -36; xcor[11, 10] = 0;

ycor[12, 0] = -36; xcor[12, 0] = 0;
ycor[12, 1] = -34; xcor[12, 1] = -4;
ycor[12, 2] = -35; xcor[12, 2] = -5;
ycor[12, 3] = -36; xcor[12, 3] = -5;
ycor[12, 4] = -35; xcor[12, 4] = -5;
ycor[12, 5] = -33; xcor[12, 5] = -5;
ycor[12, 6] = -36; xcor[12, 6] = -5;
ycor[12, 7] = -34; xcor[12, 7] = -3;
ycor[12, 8] = -30; xcor[12, 8] = +6;
ycor[12, 9] = -34; xcor[12, 9] = +3;
ycor[12, 10] = -36; xcor[12, 10] = 0;

ycor[13, 0] = -41; xcor[13, 0] = 0;
ycor[13, 1] = -41; xcor[13, 1] = 0;
ycor[13, 2] = -41; xcor[13, 2] = 0;
ycor[13, 3] = -42; xcor[13, 3] = 0;
ycor[13, 4] = -42; xcor[13, 4] = 0;
ycor[13, 5] = -42; xcor[13, 5] = 0;
ycor[13, 6] = -42; xcor[13, 6] = 0;
ycor[13, 7] = -42; xcor[13, 7] = 0;
ycor[13, 8] = -42; xcor[13, 8] = 0;
ycor[13, 9] = -42; xcor[13, 9] = 0;
ycor[13, 10] = -42; xcor[13, 10] = 0;
ycor[13, 11] = -41; xcor[13, 11] = 0;
ycor[13, 12] = -41; xcor[13, 12] = 0;
}
spanim=0
k1=0;

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Room Loader

globalvar myRooms;
myRooms = ds_list_create();
ds_list_add(myRooms,l1_2);
ds_list_add(myRooms,l1_3);
ds_list_add(myRooms,l1_4);
ds_list_add(myRooms,l1_5);
ds_list_add(myRooms,l1_6);
ds_list_add(myRooms,l1_7);
ds_list_add(myRooms,l1_8);
ds_list_add(myRooms,l1_9);
ds_list_add(myRooms,l1_10);
ds_list_add(myRooms,l1_11);
ds_list_add(myRooms,l1_12);
ds_list_add(myRooms,l1_13);
ds_list_add(myRooms,l1_14);
ds_list_add(myRooms,l1_15);
ds_list_add(myRooms,l1_16);
ds_list_add(myRooms,l1_17);
ds_list_add(myRooms,l1_18);
ds_list_add(myRooms,l1_19);
ds_list_add(myRooms,l1_20);
ds_list_add(myRooms,l1_21);
ds_list_add(myRooms,l1_22);
ds_list_add(myRooms,l1_23);
ds_list_add(myRooms,l1_24);
ds_list_add(myRooms,l1_25);
ds_list_add(myRooms,l1_26);
ds_list_add(myRooms,l1_27);
ds_list_add(myRooms,l1_28);
ds_list_add(myRooms,l1_29);
ds_list_add(myRooms,l1_30);
ds_list_add(myRooms,l1_spotlight_1);
ds_list_add(myRooms,l1_spotlight_2);
ds_list_add(myRooms,l1_spotlight_3);
ds_list_add(myRooms,l1_31);
ds_list_add(myRooms,l1_32);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>108</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_friction</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>spanim=0; image_index=0; eyehurt=0

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>eyehurt=0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Invincibility Over
bessmertie=0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Head
if image_xscale&gt;0
{
ycor[0, 0] = -36; xcor[0, 0] = 0;

ycor[1, 0] = -36; xcor[1, 0] = 0;

ycor[2, 0] = -33; xcor[2, 0] = +5;
ycor[2, 1] = -33; xcor[2, 1] = +5;
ycor[2, 2] = -33; xcor[2, 2] = +5;
ycor[2, 3] = -34; xcor[2, 3] = +5;
ycor[2, 4] = -35; xcor[2, 4] = +5;
ycor[2, 5] = -36; xcor[2, 5] = +5;
ycor[2, 6] = -35; xcor[2, 6] = +5;
ycor[2, 7] = -34; xcor[2, 7] = +5;
ycor[2, 8] = -33; xcor[2, 8] = +5;
ycor[2, 9] = -33; xcor[2, 9] = +5;
ycor[2, 10] = -33; xcor[2, 10] = +5;
ycor[2, 11] = -34; xcor[2, 11] = +5;
ycor[2, 12] = -35; xcor[2, 12] = +5;
ycor[2, 13] = -36; xcor[2, 13] = +5;
ycor[2, 14] = -35; xcor[2, 14] = +5;
ycor[2, 15] = -34; xcor[2, 15] = +5;

ycor[3, 0] = -33; xcor[3, 0] = +5;
ycor[3, 1] = -33; xcor[3, 1] = +5;
ycor[3, 2] = -33; xcor[3, 2] = +5;
ycor[3, 3] = -34; xcor[3, 3] = +5;
ycor[3, 4] = -35; xcor[3, 4] = +5;
ycor[3, 5] = -36; xcor[3, 5] = +5;
ycor[3, 6] = -35; xcor[3, 6] = +5;
ycor[3, 7] = -34; xcor[3, 7] = +5;
ycor[3, 8] = -33; xcor[3, 8] = +5;
ycor[3, 9] = -33; xcor[3, 9] = +5;
ycor[3, 10] = -33; xcor[3, 10] = +5;
ycor[3, 11] = -34; xcor[3, 11] = +5;
ycor[3, 12] = -35; xcor[3, 12] = +5;
ycor[3, 13] = -36; xcor[3, 13] = +5;
ycor[3, 14] = -35; xcor[3, 14] = +5;
ycor[3, 15] = -34; xcor[3, 15] = +5;

ycor[4, 0] = -40; xcor[4, 0] = +0;
ycor[4, 1] = -40; xcor[4, 1] = +0;
ycor[4, 2] = -40; xcor[4, 2] = +0;
ycor[4, 3] = -40; xcor[4, 3] = +0;
ycor[4, 4] = -40; xcor[4, 4] = +0;
ycor[4, 5] = -40; xcor[4, 5] = +0;
ycor[4, 6] = -40; xcor[4, 6] = +0;

ycor[5, 0] = -40; xcor[5, 0] = +0;
ycor[5, 1] = -40; xcor[5, 1] = +0;
ycor[5, 2] = -40; xcor[5, 2] = +0;
ycor[5, 3] = -40; xcor[5, 3] = +0;
ycor[5, 4] = -40; xcor[5, 4] = +0;
ycor[5, 5] = -40; xcor[5, 5] = +0;
ycor[5, 6] = -40; xcor[5, 6] = +0;

ycor[6, 0] = -36; xcor[6, 0] = 0;
ycor[6, 1] = -36; xcor[6, 1] = 0;
ycor[6, 2] = -36; xcor[6, 2] = 0;
ycor[6, 3] = -37; xcor[6, 3] = 0;
ycor[6, 4] = -37; xcor[6, 4] = 0;
ycor[6, 5] = -37; xcor[6, 5] = 0;
ycor[6, 6] = -37; xcor[6, 6] = 0;
ycor[6, 7] = -37; xcor[6, 7] = 0;
ycor[6, 8] = -37; xcor[6, 8] = 0;
ycor[6, 9] = -37; xcor[6, 9] = 0;
ycor[6, 10] = -37; xcor[6, 10] = 0;
ycor[6, 11] = -36; xcor[6, 11] = 0;
ycor[6, 12] = -36; xcor[6, 12] = 0;

ycor[7, 0] = -36; xcor[7, 0] = 0;

ycor[8, 0] = -33; xcor[8, 0] = +5;
ycor[8, 1] = -33; xcor[8, 1] = +5;
ycor[8, 2] = -33; xcor[8, 2] = +5;
ycor[8, 3] = -34; xcor[8, 3] = +5;
ycor[8, 4] = -35; xcor[8, 4] = +5;
ycor[8, 5] = -36; xcor[8, 5] = +5;
ycor[8, 6] = -35; xcor[8, 6] = +5;
ycor[8, 7] = -34; xcor[8, 7] = +5;
ycor[8, 8] = -33; xcor[8, 8] = +5;
ycor[8, 9] = -33; xcor[8, 9] = +5;
ycor[8, 10] = -33; xcor[8, 10] = +5;
ycor[8, 11] = -34; xcor[8, 11] = +5;
ycor[8, 12] = -35; xcor[8, 12] = +5;
ycor[8, 13] = -36; xcor[8, 13] = +5;
ycor[8, 14] = -35; xcor[8, 14] = +5;
ycor[8, 15] = -34; xcor[8, 15] = +5;

ycor[9, 0] = -40; xcor[9, 0] = +0;
ycor[9, 1] = -40; xcor[9, 1] = +0;
ycor[9, 2] = -40; xcor[9, 2] = +0;
ycor[9, 3] = -40; xcor[9, 3] = +0;
ycor[9, 4] = -40; xcor[9, 4] = +0;
ycor[9, 5] = -40; xcor[9, 5] = +0;
ycor[9, 6] = -40; xcor[9, 6] = +0;

ycor[10, 0] = -36; xcor[10, 0] = 0;
ycor[10, 1] = -34; xcor[10, 1] = +4;
ycor[10, 2] = -35; xcor[10, 2] = +5;
ycor[10, 3] = -36; xcor[10, 3] = +5;
ycor[10, 4] = -35; xcor[10, 4] = +5;
ycor[10, 5] = -33; xcor[10, 5] = +5;
ycor[10, 6] = -36; xcor[10, 6] = +5;
ycor[10, 7] = -34; xcor[10, 7] = +3;
ycor[10, 8] = -30; xcor[10, 8] = -6;
ycor[10, 9] = -34; xcor[10, 9] = -3;
ycor[10, 10] = -36; xcor[10, 10] = +0;

ycor[11, 0] = -36; xcor[11, 0] = 0;
ycor[11, 1] = -34; xcor[11, 1] = +4;
ycor[11, 2] = -35; xcor[11, 2] = +5;
ycor[11, 3] = -36; xcor[11, 3] = +5;
ycor[11, 4] = -35; xcor[11, 4] = +5;
ycor[11, 5] = -33; xcor[11, 5] = +5;
ycor[11, 6] = -36; xcor[11, 6] = +5;
ycor[11, 7] = -34; xcor[11, 7] = +3;
ycor[11, 8] = -30; xcor[11, 8] = -6;
ycor[11, 9] = -34; xcor[11, 9] = -3;
ycor[11, 10] = -36; xcor[11, 10] = +0;

ycor[12, 0] = -36; xcor[12, 0] = 0;
ycor[12, 1] = -34; xcor[12, 1] = +4;
ycor[12, 2] = -35; xcor[12, 2] = +5;
ycor[12, 3] = -36; xcor[12, 3] = +5;
ycor[12, 4] = -35; xcor[12, 4] = +5;
ycor[12, 5] = -33; xcor[12, 5] = +5;
ycor[12, 6] = -36; xcor[12, 6] = +5;
ycor[12, 7] = -34; xcor[12, 7] = +3;
ycor[12, 8] = -30; xcor[12, 8] = -6;
ycor[12, 9] = -34; xcor[12, 9] = -3;
ycor[12, 10] = -36; xcor[12, 10] = +0;

ycor[13, 0] = -41; xcor[13, 0] = 0;
ycor[13, 1] = -41; xcor[13, 1] = 0;
ycor[13, 2] = -41; xcor[13, 2] = 0;
ycor[13, 3] = -42; xcor[13, 3] = 0;
ycor[13, 4] = -42; xcor[13, 4] = 0;
ycor[13, 5] = -42; xcor[13, 5] = 0;
ycor[13, 6] = -42; xcor[13, 6] = 0;
ycor[13, 7] = -42; xcor[13, 7] = 0;
ycor[13, 8] = -42; xcor[13, 8] = 0;
ycor[13, 9] = -42; xcor[13, 9] = 0;
ycor[13, 10] = -42; xcor[13, 10] = 0;
ycor[13, 11] = -41; xcor[13, 11] = 0;
ycor[13, 12] = -41; xcor[13, 12] = 0;
}


if image_xscale&lt;0
{
ycor[0, 0] = -36; xcor[0, 0] = 0;

ycor[1, 0] = -36; xcor[1, 0] = 0;

ycor[2, 0] = -33; xcor[2, 0] = -5;
ycor[2, 1] = -33; xcor[2, 1] = -5;
ycor[2, 2] = -33; xcor[2, 2] = -5;
ycor[2, 3] = -34; xcor[2, 3] = -5;
ycor[2, 4] = -35; xcor[2, 4] = -5;
ycor[2, 5] = -36; xcor[2, 5] = -5;
ycor[2, 6] = -35; xcor[2, 6] = -5;
ycor[2, 7] = -34; xcor[2, 7] = -5;
ycor[2, 8] = -33; xcor[2, 8] = -5;
ycor[2, 9] = -33; xcor[2, 9] = -5;
ycor[2, 10] = -33; xcor[2, 10] = -5;
ycor[2, 11] = -34; xcor[2, 11] = -5;
ycor[2, 12] = -35; xcor[2, 12] = -5;
ycor[2, 13] = -36; xcor[2, 13] = -5;
ycor[2, 14] = -35; xcor[2, 14] = -5;
ycor[2, 15] = -34; xcor[2, 15] = -5;

ycor[3, 0] = -33; xcor[3, 0] = -5;
ycor[3, 1] = -33; xcor[3, 1] = -5;
ycor[3, 2] = -33; xcor[3, 2] = -5;
ycor[3, 3] = -34; xcor[3, 3] = -5;
ycor[3, 4] = -35; xcor[3, 4] = -5;
ycor[3, 5] = -36; xcor[3, 5] = -5;
ycor[3, 6] = -35; xcor[3, 6] = -5;
ycor[3, 7] = -34; xcor[3, 7] = -5;
ycor[3, 8] = -33; xcor[3, 8] = -5;
ycor[3, 9] = -33; xcor[3, 9] = -5;
ycor[3, 10] = -33; xcor[3, 10] = -5;
ycor[3, 11] = -34; xcor[3, 11] = -5;
ycor[3, 12] = -35; xcor[3, 12] = -5;
ycor[3, 13] = -36; xcor[3, 13] = -5;
ycor[3, 14] = -35; xcor[3, 14] = -5;
ycor[3, 15] = -34; xcor[3, 15] = -5;

ycor[4, 0] = -40; xcor[4, 0] = +0;
ycor[4, 1] = -40; xcor[4, 1] = +0;
ycor[4, 2] = -40; xcor[4, 2] = +0;
ycor[4, 3] = -40; xcor[4, 3] = +0;
ycor[4, 4] = -40; xcor[4, 4] = +0;
ycor[4, 5] = -40; xcor[4, 5] = +0;
ycor[4, 6] = -40; xcor[4, 6] = +0;

ycor[5, 0] = -40; xcor[5, 0] = +0;
ycor[5, 1] = -40; xcor[5, 1] = +0;
ycor[5, 2] = -40; xcor[5, 2] = +0;
ycor[5, 3] = -40; xcor[5, 3] = +0;
ycor[5, 4] = -40; xcor[5, 4] = +0;
ycor[5, 5] = -40; xcor[5, 5] = +0;
ycor[5, 6] = -40; xcor[5, 6] = +0;

ycor[6, 0] = -36; xcor[6, 0] = 0;
ycor[6, 1] = -36; xcor[6, 1] = 0;
ycor[6, 2] = -36; xcor[6, 2] = 0;
ycor[6, 3] = -37; xcor[6, 3] = 0;
ycor[6, 4] = -37; xcor[6, 4] = 0;
ycor[6, 5] = -37; xcor[6, 5] = 0;
ycor[6, 6] = -37; xcor[6, 6] = 0;
ycor[6, 7] = -37; xcor[6, 7] = 0;
ycor[6, 8] = -37; xcor[6, 8] = 0;
ycor[6, 9] = -37; xcor[6, 9] = 0;
ycor[6, 10] = -37; xcor[6, 10] = 0;
ycor[6, 11] = -36; xcor[6, 11] = 0;
ycor[6, 12] = -36; xcor[6, 12] = 0;

ycor[7, 0] = -36; xcor[7, 0] = 0;

ycor[8, 0] = -33; xcor[8, 0] = -5;
ycor[8, 1] = -33; xcor[8, 1] = -5;
ycor[8, 2] = -33; xcor[8, 2] = -5;
ycor[8, 3] = -34; xcor[8, 3] = -5;
ycor[8, 4] = -35; xcor[8, 4] = -5;
ycor[8, 5] = -36; xcor[8, 5] = -5;
ycor[8, 6] = -35; xcor[8, 6] = -5;
ycor[8, 7] = -34; xcor[8, 7] = -5;
ycor[8, 8] = -33; xcor[8, 8] = -5;
ycor[8, 9] = -33; xcor[8, 9] = -5;
ycor[8, 10] = -33; xcor[8, 10] = -5;
ycor[8, 11] = -34; xcor[8, 11] = -5;
ycor[8, 12] = -35; xcor[8, 12] = -5;
ycor[8, 13] = -36; xcor[8, 13] = -5;
ycor[8, 14] = -35; xcor[8, 14] = -5;
ycor[8, 15] = -34; xcor[8, 15] = -5;

ycor[9, 0] = -40; xcor[9, 0] = +0;
ycor[9, 1] = -40; xcor[9, 1] = +0;
ycor[9, 2] = -40; xcor[9, 2] = +0;
ycor[9, 3] = -40; xcor[9, 3] = +0;
ycor[9, 4] = -40; xcor[9, 4] = +0;
ycor[9, 5] = -40; xcor[9, 5] = +0;
ycor[9, 6] = -40; xcor[9, 6] = +0;

ycor[10, 0] = -36; xcor[10, 0] = 0;
ycor[10, 1] = -34; xcor[10, 1] = -4;
ycor[10, 2] = -35; xcor[10, 2] = -5;
ycor[10, 3] = -36; xcor[10, 3] = -5;
ycor[10, 4] = -35; xcor[10, 4] = -5;
ycor[10, 5] = -33; xcor[10, 5] = -5;
ycor[10, 6] = -36; xcor[10, 6] = -5;
ycor[10, 7] = -34; xcor[10, 7] = -3;
ycor[10, 8] = -30; xcor[10, 8] = +6;
ycor[10, 9] = -34; xcor[10, 9] = +3;
ycor[10, 10] = -36; xcor[10, 10] = 0;

ycor[11, 0] = -36; xcor[11, 0] = 0;
ycor[11, 1] = -34; xcor[11, 1] = -4;
ycor[11, 2] = -35; xcor[11, 2] = -5;
ycor[11, 3] = -36; xcor[11, 3] = -5;
ycor[11, 4] = -35; xcor[11, 4] = -5;
ycor[11, 5] = -33; xcor[11, 5] = -5;
ycor[11, 6] = -36; xcor[11, 6] = -5;
ycor[11, 7] = -34; xcor[11, 7] = -3;
ycor[11, 8] = -30; xcor[11, 8] = +6;
ycor[11, 9] = -34; xcor[11, 9] = +3;
ycor[11, 10] = -36; xcor[11, 10] = 0;

ycor[12, 0] = -36; xcor[12, 0] = 0;
ycor[12, 1] = -34; xcor[12, 1] = -4;
ycor[12, 2] = -35; xcor[12, 2] = -5;
ycor[12, 3] = -36; xcor[12, 3] = -5;
ycor[12, 4] = -35; xcor[12, 4] = -5;
ycor[12, 5] = -33; xcor[12, 5] = -5;
ycor[12, 6] = -36; xcor[12, 6] = -5;
ycor[12, 7] = -34; xcor[12, 7] = -3;
ycor[12, 8] = -30; xcor[12, 8] = +6;
ycor[12, 9] = -34; xcor[12, 9] = +3;
ycor[12, 10] = -36; xcor[12, 10] = 0;

ycor[13, 0] = -41; xcor[13, 0] = 0;
ycor[13, 1] = -41; xcor[13, 1] = 0;
ycor[13, 2] = -41; xcor[13, 2] = 0;
ycor[13, 3] = -42; xcor[13, 3] = 0;
ycor[13, 4] = -42; xcor[13, 4] = 0;
ycor[13, 5] = -42; xcor[13, 5] = 0;
ycor[13, 6] = -42; xcor[13, 6] = 0;
ycor[13, 7] = -42; xcor[13, 7] = 0;
ycor[13, 8] = -42; xcor[13, 8] = 0;
ycor[13, 9] = -42; xcor[13, 9] = 0;
ycor[13, 10] = -42; xcor[13, 10] = 0;
ycor[13, 11] = -41; xcor[13, 11] = 0;
ycor[13, 12] = -41; xcor[13, 12] = 0;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(sys_transition) or instance_exists(gameover)
{
canmove=false
}
else
{
canmove=true
}
if x&lt;0 {x=0}

if canmove=true
{
xspeed = iff(abs(xspeed) &gt; xmaxspeed, xmaxspeed * sign(xspeed), xspeed);
yspeed = iff(abs(yspeed) &gt; ymaxspeed, ymaxspeed * sign(yspeed), yspeed);

if (place_free(x, y + yspeed)) {
  y += yspeed;
}
else 
{
  if (yspeed &gt; 0) 
  {
    isJumping = false;
    landing = landing_max;
    wingstimer=0;
    y = floor(y);
    double_jump=1;
    umbrella=false;
  }
  move_contact_solid(point_direction(x, y, x, y + yspeed), yspeed);
  
  yspeed = 0;
}

if (place_free(x + xspeed, y)) {
    x += xspeed;
} 
else {
  move_contact_solid(point_direction(x, y, x + xspeed, y), xspeed);
  xspeed = 0;
}

  if (place_free(x, y + 1)) {
    yspeed += weight;

    if ((!gamepad_button_check(0, gp_face2)) &amp;&amp; (!keyboard_check(vk_space)) &amp;&amp; isJumping &amp;&amp; (yspeed &lt; -jumpHeight / 2)) {
      yspeed = -jumpHeight / 3;
    }
  }
  else {
    availableJumps = maxDoubleJumps;
    canDoubleJump = false;
    if (gamepad_button_check_pressed(0, gp_face2) || keyboard_check_pressed(vk_space)) {
      yspeed = -jumpHeight;
      xspeed = xmaxspeed * (0 - keyboard_check(ord('A')) + keyboard_check(ord('D')));
      double_jump=1;
      isJumping = true;
    }
    }
    
  if (gamepad_button_check_pressed(0, gp_padl) || keyboard_check_pressed(ord('A')) || (keyboard_check(ord('A')) &amp;&amp; keyboard_check_released(ord('D')))) {
    dir = -1;
  }
  if (gamepad_button_check_pressed(0, gp_padr) || keyboard_check_pressed(ord('D')) || (keyboard_check(ord('D')) &amp;&amp; keyboard_check_released(ord('A')))) {
    dir = 1; 
  }
    
  if !brake
  {
  if (
  keyboard_check(ord('A')) &amp;&amp; xspeed &gt; -xmaxspeed &amp;&amp; dir == -1 ||
  gamepad_button_check(0, gp_padl) &amp;&amp; xspeed &gt; -xmaxspeed &amp;&amp; dir == -1
  ) {
    xspeed -= accel;
  }
  if (
  keyboard_check(ord('D')) &amp;&amp; xspeed &lt; xmaxspeed &amp;&amp; dir == 1 ||
  gamepad_button_check(0, gp_padr) &amp;&amp; xspeed &lt; xmaxspeed &amp;&amp; dir == 1
  ) {
    xspeed += accel;
  }
  
  }

  if (!gamepad_button_check(0, gp_padl) &amp;&amp; !gamepad_button_check(0, gp_padr) &amp;&amp; !keyboard_check(ord('A')) &amp;&amp; !keyboard_check(ord('D'))) {
    if (abs(xspeed) &gt; xfriction) {
      xspeed -= sign(xspeed) * xfriction;
    } else {
      xspeed = 0;
    }
    }

if (gamepad_button_check_pressed(0, gp_face2))
{if (global.getwings=false)
{
if( place_free(x,y+1) &amp;&amp; double_jump = 1 )
{ 
double_jump=0;
image_index=0
yspeed = -jumpHeight;
xspeed = xmaxspeed * (0 - keyboard_check(ord('A')) + keyboard_check(ord('D')));

part_emitter_region(particles.Starter_Depth0,particles.Emitter4,self.x,self.x,self.y,self.y,ps_shape_rectangle,1)
part_emitter_stream(particles.Starter_Depth0,particles.Emitter4,particles.Particle4,5)
} 
}

if (global.getwings=true)
{
if( place_free(x,y+1) &amp;&amp; double_jump = 1 )
{ 
double_jump=2;
yspeed = -jumpHeight;
xspeed = xmaxspeed * (0 - keyboard_check(ord('A')) + keyboard_check(ord('D')));

part_emitter_region(particles.Starter_Depth0,particles.Emitter4,self.x,self.x,self.y,self.y,ps_shape_rectangle,1)
part_emitter_stream(particles.Starter_Depth0,particles.Emitter4,particles.Particle4,5)
} 

if( place_free(x,y+1) &amp;&amp; double_jump = 2 )
{ 
double_jump=0;
image_index=0
yspeed = -jumpHeight;
xspeed = xmaxspeed * (0 - keyboard_check(ord('A')) + keyboard_check(ord('D')));

part_emitter_region(particles.Starter_Depth0,particles.Emitter7,self.x,self.x,self.y,self.y,ps_shape_rectangle,1)
part_emitter_stream(particles.Starter_Depth0,particles.Emitter7,particles.Particle7,15)
} 
}
}
}

if (global.getumbrella=true)
{
if place_free(x,y+1)
{
if keyboard_check(ord('W'))
{umbrella=true}
if keyboard_check_released(ord('W'))
{umbrella=false}
}
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Invincibility Frames

if bessmertie=1
{


if t &lt; 80
{

if (t&lt;=8 || t&gt;16 &amp;&amp; t&lt;=24 || t&gt;32 &amp;&amp; t&lt;=40 || t&gt;48 &amp;&amp; t&lt;=56 || t&gt;64 &amp;&amp; t&lt;=72 || t&gt;80 &amp;&amp; t&lt;=88|| t&gt;96 &amp;&amp; t&lt;=104 || t&gt;112 &amp;&amp; t&lt;=120 || t&gt;128 )
{image_alpha=0.5}
if (t&gt;8 &amp;&amp; t&lt;=16 || t&gt;24 &amp;&amp; t&lt;=32 || t&gt;40 &amp;&amp; t&lt;=48 || t&gt;56 &amp;&amp; t&lt;=64 || t&gt;72 &amp;&amp; t&lt;=80 || t&gt;88 &amp;&amp; t&lt;=96 || t&gt;104 &amp;&amp; t&lt;=112 || t&gt;120 &amp;&amp; t&lt;=128 )
{image_alpha=1}
t+=1; //counts down to when the guy stops flashing, ignoring the clumsy "alarm" feature
}
}

if bessmertie=0
{
image_alpha = 1; t=0;
}

if (flashlight=1)
{
if mouse_x&gt;x{image_xscale=1 hatscale=1}
if mouse_x&lt;x{image_xscale=-1 hatscale=-1}
}
if (flashlight=0)
{
image_xscale=dir
hatscale=dir
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if (x&gt;room_width+64)
{
if (!instance_exists(sys_transition))
{
global.passedrooms+=1;
x=-64
room_goto_transition(ds_list_find_value(myRooms,0), 60);
ds_list_delete(myRooms,0);
}
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Other
if global.getwings=true
{
if( place_free(x,y+1) &amp;&amp; double_jump = 0 )
{
if wingstimer&lt;30
{wingstimer+=1}
}
}

if umbrella=false
{
weight = global.playergravity
}
else
{
if yspeed&gt;0
{
weight = global.playergravity/8; 
}  
else
{
weight = global.playergravity;   
}
}  
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>spanim</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Image Handling

// Draw the appropriate sprites:
if (place_meeting(x, y+1, o_blockparent)) {
  if (xspeed == 0) 
    {
    if (flashlight=true) sprite_index = luna_stay;
    if (dontdrawarms=true) sprite_index = luna_stay_b;
    if (dontdrawarms=false &amp;&amp; flashlight=false) sprite_index = luna_stay_a;
    stopframes=0
    startframes=0
    brake=-1
    // Idle.
    }
    else 
    {
    // Running.
    if brake=-1
    {
    if startframes&lt;=10 {startframes++}
    if (flashlight=true) sprite_index=luna_stopstart
    if (dontdrawarms=true) sprite_index = luna_stopstart_b;
    if (dontdrawarms=false &amp;&amp; flashlight=false) sprite_index = luna_stopstart_a;
    if startframes&gt;=0 and startframes&lt;2 {image_index=0}
    if startframes&gt;=2 and startframes&lt;4 {image_index=1}
    if startframes&gt;=4 and startframes&lt;6 {image_index=2}
    if startframes&gt;=6 and startframes&lt;8 {image_index=3}
    if startframes&gt;=8 and startframes&lt;=10 {image_index=4}
    if startframes&gt;10 {brake=0 image_index=0}
    }
    if brake=0 or brake=-1
    {
    if keyboard_check_released(ord('A')) or keyboard_check_released(ord('D'))
    {
    brake=1
    stopframes=0
    }
    }
    if brake=0
    {
    if (flashlight=true) sprite_index = luna_run;
    if (dontdrawarms=true) sprite_index = luna_run_b;
    if (dontdrawarms=false &amp;&amp; flashlight=false) sprite_index = luna_run_a;
    }
    if (sign(xspeed) != sign(dir)) { brake=0 }
    if brake=1
    {
    if stopframes&lt;=26 {stopframes++}
    if (flashlight=true) sprite_index=luna_stopstart
    if (dontdrawarms=true) sprite_index = luna_stopstart_b;
    if (dontdrawarms=false &amp;&amp; flashlight=false) sprite_index = luna_stopstart_a;
    if stopframes&gt;=0 and stopframes&lt;3 {image_index=6}
    if stopframes&gt;=3 and stopframes&lt;6 {image_index=7}
    if stopframes&gt;=6 and stopframes&lt;20 {image_index=8}
    if stopframes&gt;=20 and stopframes&lt;23 {image_index=9}
    if stopframes&gt;=23 and stopframes&lt;=26 {image_index=10}
    if stopframes&gt;26 {xspeed=0}
    }
  }
}
else {
  // Jumping.
    if (flashlight=true) sprite_index = luna_jump;
    if (dontdrawarms=true) sprite_index = luna_jump_b;
    if (dontdrawarms=false &amp;&amp; flashlight=false) sprite_index = luna_jump_a;
  if (yspeed&lt;-7) { image_index = 0; }
  if (yspeed&lt;-4 and yspeed&gt;=-7) { image_index = 1; }
  if (yspeed&lt;-2 and yspeed&gt;=-4) { image_index = 2; }
  if (abs(yspeed) &lt; 2) { image_index = 3; }
  if (yspeed&gt;2 and yspeed&lt;=4) { image_index = 4; }
  if (yspeed&gt;4 and yspeed&lt;=7) { image_index = 5; }
  if (yspeed&gt;7 ) { image_index = 6; }
}
// Landing.
if (landing &gt; 0) { 
landing -= 1; 
}

// Configure image speeds.

if (sprite_index == luna_run || sprite_index == luna_run_a || sprite_index == luna_run_b) {
  image_speed = 0.35;
}
else
if (sprite_index == luna_stay || sprite_index == luna_stay_a || sprite_index == luna_stay_b) {
  image_speed = 0.05;
}
else
if (sprite_index == luna_stopstart || sprite_index == luna_stopstart_a || sprite_index == luna_stopstart_b) {
  image_speed = 0;
}
else
image_speed = 0.5;

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (keyboard_check_pressed(ord('Q')))
{
if global.potion&gt;0
{
spanim=1;
if lives&lt;global.maxlives {lives+=1;}
global.potion-=1;
image_index=0
alarm[2]=40
}
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Destroy objects
//instance_deactivate_all(true);
//instance_activate_object(control);
//instance_activate_object(superview);
//instance_activate_object(background1);
//instance_activate_object(particles);
//instance_activate_object(torch);
//instance_activate_object(fountain);
//instance_activate_object(backtree);
//instance_activate_object(lightballpar);
//instance_activate_object(parbullet);
//instance_activate_object(background1);
//instance_activate_region(view_xview-196,view_yview-196,view_wview+260,view_hview+260,1); 
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Potion
if spanim=1
{
if (place_meeting(x, y+1, o_blockparent))
{
sprite_index=luna_drink;
}
else
{
sprite_index=luna_drinkjump;
}
image_speed = 0.35;
if image_index&gt;5 and image_index&lt;10
{
eyehurt=1 
part_emitter_region(particles.Starter_Depth0,particles.Emitter16,self.x-64,self.x+64,self.y,self.y+35,1,1);
part_emitter_burst(particles.Starter_Depth0,particles.Emitter16,particles.Particle16,6);}  
}

if spanim=1 and (place_meeting(x, y+1, o_blockparent)) { xmaxspeed = 0; }
else
{ xmaxspeed = global.movespeed; }


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="bubble">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>other.jump=1
yspeed = -jumpHeight*1.45;
xspeed = xmaxspeed * (0 - keyboard_check(ord('A')) + keyboard_check(ord('D')));
isJumping = false;
double_jump=1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
ds_list_shuffle(myRooms);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var i_off;
switch( sprite_index ) { 
case( luna_stay ): i_off = 0; break; 
case( luna_stay_a ): i_off = 1; break; 
case( luna_run ): i_off = 2; break; 
case( luna_run_a ): i_off = 3; break;
case( luna_jump ): i_off = 4; break; 
case( luna_jump_a ): i_off = 5; break; 
case( luna_drink ): i_off = 6; break;
case( luna_stay_b ): i_off = 7; break; 
case( luna_run_b ): i_off = 8; break;
case( luna_jump_b ): i_off = 9; break; 
case( luna_stopstart ): i_off = 10; break; 
case( luna_stopstart_a ): i_off = 11; break; 
case( luna_stopstart_b ): i_off = 12; break; 
case( luna_drinkjump ): i_off = 13; break;
}

var ii = floor( image_index );

if global.getwings=true 
{
if (wingstimer&gt;0 and wingstimer&lt;=4){draw_sprite_ext(wings,0,player.x, player.y-70,image_xscale,image_yscale,0,c_white,1);}
if (wingstimer&gt;4 and wingstimer&lt;=9){draw_sprite_ext(wings,1,player.x, player.y-70,image_xscale,image_yscale,0,c_white,0.25);}
if (wingstimer&gt;9 and wingstimer&lt;=14){draw_sprite_ext(wings,2,player.x, player.y-70,image_xscale,image_yscale,0,c_white,0.50);}
if (wingstimer&gt;14 and wingstimer&lt;=17){draw_sprite_ext(wings,3,player.x, player.y-70,image_xscale,image_yscale,0,c_white,0.75);}
if (wingstimer&gt;17 and wingstimer&lt;=20){draw_sprite_ext(wings,4,player.x, player.y-70,image_xscale,image_yscale,0,c_white,1);}
if (wingstimer&gt;20 and wingstimer&lt;=22){draw_sprite_ext(wings,5,player.x, player.y-70,image_xscale,image_yscale,0,c_white,1);}
if (wingstimer&gt;22 and wingstimer&lt;=24){draw_sprite_ext(wings,6,player.x, player.y-70,image_xscale,image_yscale,0,c_white,1);}
if (wingstimer&gt;24 and wingstimer&lt;=26){draw_sprite_ext(wings,7,player.x, player.y-70,image_xscale,image_yscale,0,c_white,0.75);}
if (wingstimer&gt;26 and wingstimer&lt;=28){draw_sprite_ext(wings,8,player.x, player.y-70,image_xscale,image_yscale,0,c_white,0.50);}
if (wingstimer&gt;28 and wingstimer&lt;=30){draw_sprite_ext(wings,9,player.x, player.y-70,image_xscale,image_yscale,0,c_white,0.25);}
}

if umbrella=true
{
draw_sprite_ext(s_umbrella,2,x,y-35,image_xscale,image_yscale,image_angle,image_blend,image_alpha)
}
if (spanim=0)
{
if (global.weaponstyle=1)
{
if (chararm.image_index&lt;3 or chararm.image_index&gt;8) {draw_sprite_ext(chararm.sprite_index,chararm.image_index,chararm.x,chararm.y,chararm.image_xscale,chararm.image_yscale,chararm.image_angle,chararm.image_blend,chararm.image_alpha)}
}
}

if double_jump=0
{
if slidealpha&lt;1 {slidealpha+=0.05}
}
else
{
if slidealpha&gt;0 {slidealpha-=0.1}
}
dist=point_distance(x,y,xprevious,yprevious)
dire=point_direction(x,y,xprevious,yprevious)
draw_set_blend_mode(bm_add);
draw_sprite_ext(sprite_index,image_index,x+lengthdir_x(dist*5,dire),y+lengthdir_y(dist*5,dire),image_xscale,image_yscale,image_angle,c_fuchsia,0.1*slidealpha)
draw_sprite_ext(sprite_index,image_index,x+lengthdir_x(dist*4,dire),y+lengthdir_y(dist*4,dire),image_xscale,image_yscale,image_angle,c_fuchsia,0.2*slidealpha)
draw_sprite_ext(sprite_index,image_index,x+lengthdir_x(dist*3,dire),y+lengthdir_y(dist*3,dire),image_xscale,image_yscale,image_angle,c_fuchsia,0.3*slidealpha)
draw_sprite_ext(sprite_index,image_index,x+lengthdir_x(dist*2,dire),y+lengthdir_y(dist*2,dire),image_xscale,image_yscale,image_angle,c_fuchsia,0.4*slidealpha)
draw_sprite_ext(sprite_index,image_index,x+lengthdir_x(dist*1,dire),y+lengthdir_y(dist*1,dire),image_xscale,image_yscale,image_angle,c_fuchsia,0.5*slidealpha)
draw_sprite_ext(luna_hat,hatindex,x+lengthdir_x(dist*5,dire) + xcor[i_off, ii], y+lengthdir_y(dist*5,dire) + ycor[i_off, ii],image_xscale, image_yscale,0,c_fuchsia,0.1*slidealpha);
draw_sprite_ext(luna_hat,hatindex,x+lengthdir_x(dist*4,dire) + xcor[i_off, ii], y+lengthdir_y(dist*4,dire) + ycor[i_off, ii],image_xscale, image_yscale,0,c_fuchsia,0.2*slidealpha);
draw_sprite_ext(luna_hat,hatindex,x+lengthdir_x(dist*3,dire) + xcor[i_off, ii], y+lengthdir_y(dist*3,dire) + ycor[i_off, ii],image_xscale, image_yscale,0,c_fuchsia,0.3*slidealpha);
draw_sprite_ext(luna_hat,hatindex,x+lengthdir_x(dist*2,dire) + xcor[i_off, ii], y+lengthdir_y(dist*2,dire) + ycor[i_off, ii],image_xscale, image_yscale,0,c_fuchsia,0.4*slidealpha);
draw_sprite_ext(luna_hat,hatindex,x+lengthdir_x(dist*1,dire) + xcor[i_off, ii], y+lengthdir_y(dist*1,dire) + ycor[i_off, ii],image_xscale, image_yscale,0,c_fuchsia,0.5*slidealpha);
draw_set_blend_mode(bm_normal);
draw_sprite_ext(sprite_index,image_index,x,y,image_xscale, image_yscale,image_angle,image_blend,image_alpha);

if eyehurt=0
{
if (flashlight=true)
{
if (sprite_index = luna_run or sprite_index = luna_run_a or sprite_index = luna_run_b)
{
if image_xscale&gt;0 {draw_sprite_part_ext(luna_eyes,eyeindex,0,0,25,20,player.x + xcor[i_off, ii] - 7, player.y + ycor[i_off, ii] - 39,image_xscale,image_yscale,c_white,1)}
else {draw_sprite_part_ext(luna_eyes,eyeindex,0,0,25,20,player.x + xcor[i_off, ii] +7, player.y + ycor[i_off, ii] - 39,image_xscale,image_yscale,c_white,1)}
}
else if (sprite_index = luna_stopstart_b or sprite_index = luna_stopstart_a or sprite_index = luna_stopstart)
{
if image_xscale&gt;0
{
if (image_index=0 or image_index=8 or image_index=9 or image_index=10) draw_sprite_ext(luna_eyes,eyeindex,player.x + xcor[i_off, ii], player.y + ycor[i_off, ii],image_xscale, image_yscale,0,c_white,1);
if (image_index=1 or image_index=7) draw_sprite_part_ext(luna_eyes,eyeindex,0,0,35,20,player.x + xcor[i_off, ii]-17, player.y + ycor[i_off, ii]-39,image_xscale,image_yscale,c_white,1);
if (image_index=2) draw_sprite_part_ext(luna_eyes,eyeindex,0,0,33,20,player.x + xcor[i_off, ii]-15, player.y + ycor[i_off, ii]-39,image_xscale,image_yscale,c_white,1);
if (image_index=3 or image_index=6) draw_sprite_part_ext(luna_eyes,eyeindex,0,0,30,20,player.x + xcor[i_off, ii]-12, player.y + ycor[i_off, ii]-39,image_xscale,image_yscale,c_white,1);
if (image_index=4) draw_sprite_part_ext(luna_eyes,eyeindex,0,0,28,20,player.x + xcor[i_off, ii]-10, player.y + ycor[i_off, ii]-39,image_xscale,image_yscale,c_white,1);
if (image_index=5) draw_sprite_part_ext(luna_eyes,eyeindex,0,0,27,20,player.x + xcor[i_off, ii]-9, player.y + ycor[i_off, ii]-39,image_xscale,image_yscale,c_white,1);
}
else 
{
if (image_index=0 or image_index=8 or image_index=9 or image_index=10) draw_sprite_ext(luna_eyes,eyeindex,player.x + xcor[i_off, ii], player.y + ycor[i_off, ii],image_xscale, image_yscale,0,c_white,1);
if (image_index=1 or image_index=7) draw_sprite_part_ext(luna_eyes,eyeindex,0,0,35,20,player.x + xcor[i_off, ii]+17, player.y + ycor[i_off, ii]-39,image_xscale,image_yscale,c_white,1);
if (image_index=2) draw_sprite_part_ext(luna_eyes,eyeindex,0,0,33,20,player.x + xcor[i_off, ii]+15, player.y + ycor[i_off, ii]-39,image_xscale,image_yscale,c_white,1);
if (image_index=3 or image_index=6) draw_sprite_part_ext(luna_eyes,eyeindex,0,0,30,20,player.x + xcor[i_off, ii]+12, player.y + ycor[i_off, ii]-39,image_xscale,image_yscale,c_white,1);
if (image_index=4) draw_sprite_part_ext(luna_eyes,eyeindex,0,0,28,20,player.x + xcor[i_off, ii]+10, player.y + ycor[i_off, ii]-39,image_xscale,image_yscale,c_white,1);
if (image_index=5) draw_sprite_part_ext(luna_eyes,eyeindex,0,0,27,20,player.x + xcor[i_off, ii]+9, player.y + ycor[i_off, ii]-39,image_xscale,image_yscale,c_white,1);
}
}
else
{
draw_sprite_ext(luna_eyes,eyeindex,player.x + xcor[i_off, ii], player.y + ycor[i_off, ii], image_xscale, image_yscale,0,c_white,1);
}

if image_xscale&gt;0
{
switch (point_direction(x, y, mouse_x, mouse_y) + 45) div 22.5  {
case 16:
case 0: eyeindex = 0; break;
case 1: eyeindex = 1; break;
case 2: eyeindex = 2; break;
case 3: eyeindex = 3; break;
case 4: eyeindex = 4; break;
case 5: eyeindex = 5; break;
case 6: eyeindex = 6; break;
case 7: eyeindex = 7; break;
case 8: eyeindex = 8; break;
case 9: eyeindex = 9; break;
case 10: eyeindex = 10; break;
case 11: eyeindex = 11; break;
case 12: eyeindex = 12; break;
case 13: eyeindex = 13; break;
case 14: eyeindex = 14; break;
case 15: eyeindex = 15; break;
}
}
else
{
switch (point_direction(x, y, mouse_x, mouse_y) + 45) div 22.5  {
case 16:
case 0: eyeindex = 10; break;
case 1: eyeindex = 9; break;
case 2: eyeindex = 8; break;
case 3: eyeindex = 7; break;
case 4: eyeindex = 6; break;
case 5: eyeindex = 5; break;
case 6: eyeindex = 4; break;
case 7: eyeindex = 3; break;
case 8: eyeindex = 2; break;
case 9: eyeindex = 1; break;
case 10: eyeindex = 0; break;
case 11: eyeindex = 15; break;
case 12: eyeindex = 14; break;
case 13: eyeindex = 13; break;
case 14: eyeindex = 12; break;
case 15: eyeindex = 11; break;
}
}
}

if (flashlight=false)
{
if (sprite_index = luna_stay or sprite_index = luna_stay_a or sprite_index = luna_stay_b or sprite_index = luna_drink)
{
draw_sprite_ext(luna_eyes,eyeindex,player.x + xcor[i_off, ii], player.y + ycor[i_off, ii],image_xscale,image_yscale,0,c_white,1);
eyeindex=0
}
if (sprite_index = luna_run or sprite_index = luna_run_a or sprite_index = luna_run_b)
{
if dir=1 {draw_sprite_part_ext(luna_eyes,eyeindex,0,0,25,20,player.x + xcor[i_off, ii] - 7, player.y + ycor[i_off, ii] - 39,image_xscale,image_yscale,c_white,1)}
else {draw_sprite_part_ext(luna_eyes,eyeindex,0,0,25,20,player.x + xcor[i_off, ii] -26, player.y + ycor[i_off, ii] - 39,image_xscale,image_yscale,c_white,1)}
eyeindex=0
}
if ((sprite_index = luna_jump_b or sprite_index = luna_jump_a or sprite_index = luna_jump))
{
draw_sprite_ext(luna_eyes,eyeindex,player.x + xcor[i_off, ii], player.y + ycor[i_off, ii],image_xscale, image_yscale,0,c_white,1);
if (image_index=0) {eyeindex=3}
if (image_index=1) {eyeindex=2}
if (image_index=2) {eyeindex=1}
if (image_index=3) {eyeindex=0}
if (image_index=4) {eyeindex=16}
if (image_index=5) {eyeindex=15}
if (image_index=6) {eyeindex=14}
}
if (sprite_index = luna_stopstart_b or sprite_index = luna_stopstart_a or sprite_index = luna_stopstart)
{
if dir=1 
{
if (image_index=0 or image_index=8 or image_index=9 or image_index=10) draw_sprite_ext(luna_eyes,eyeindex,player.x + xcor[i_off, ii], player.y + ycor[i_off, ii],image_xscale, image_yscale,0,c_white,1);
if (image_index=1 or image_index=7) draw_sprite_part_ext(luna_eyes,eyeindex,0,0,35,20,player.x + xcor[i_off, ii]-17, player.y + ycor[i_off, ii]-39,image_xscale,image_yscale,c_white,1);
if (image_index=2) draw_sprite_part_ext(luna_eyes,eyeindex,0,0,33,20,player.x + xcor[i_off, ii]-15, player.y + ycor[i_off, ii]-39,image_xscale,image_yscale,c_white,1);
if (image_index=3 or image_index=6) draw_sprite_part_ext(luna_eyes,eyeindex,0,0,30,20,player.x + xcor[i_off, ii]-12, player.y + ycor[i_off, ii]-39,image_xscale,image_yscale,c_white,1);
if (image_index=4) draw_sprite_part_ext(luna_eyes,eyeindex,0,0,28,20,player.x + xcor[i_off, ii]-10, player.y + ycor[i_off, ii]-39,image_xscale,image_yscale,c_white,1);
if (image_index=5) draw_sprite_part_ext(luna_eyes,eyeindex,0,0,27,20,player.x + xcor[i_off, ii]-9, player.y + ycor[i_off, ii]-39,image_xscale,image_yscale,c_white,1);
}
else 
{
if (image_index=0 or image_index=8 or image_index=9 or image_index=10) draw_sprite_ext(luna_eyes,eyeindex,player.x + xcor[i_off, ii], player.y + ycor[i_off, ii],image_xscale, image_yscale,0,c_white,1);
if (image_index=1 or image_index=7) draw_sprite_part_ext(luna_eyes,eyeindex,0,0,35,20,player.x + xcor[i_off, ii]+17, player.y + ycor[i_off, ii]-39,image_xscale,image_yscale,c_white,1);
if (image_index=2) draw_sprite_part_ext(luna_eyes,eyeindex,0,0,33,20,player.x + xcor[i_off, ii]+15, player.y + ycor[i_off, ii]-39,image_xscale,image_yscale,c_white,1);
if (image_index=3 or image_index=6) draw_sprite_part_ext(luna_eyes,eyeindex,0,0,30,20,player.x + xcor[i_off, ii]+12, player.y + ycor[i_off, ii]-39,image_xscale,image_yscale,c_white,1);
if (image_index=4) draw_sprite_part_ext(luna_eyes,eyeindex,0,0,28,20,player.x + xcor[i_off, ii]+10, player.y + ycor[i_off, ii]-39,image_xscale,image_yscale,c_white,1);
if (image_index=5) draw_sprite_part_ext(luna_eyes,eyeindex,0,0,27,20,player.x + xcor[i_off, ii]+9, player.y + ycor[i_off, ii]-39,image_xscale,image_yscale,c_white,1);
}
eyeindex=0
}
}
}
else
{
draw_sprite_ext(lunahurt_eyes,0,player.x + xcor[i_off, ii], player.y + ycor[i_off, ii],image_xscale, image_yscale,0,c_white,1);
}

if (hatscale=1) 
{
if (sprite_index == luna_run || sprite_index == luna_run_a || sprite_index == luna_run_b) 
{
hatindex=10
}
else if (sprite_index == luna_stopstart || sprite_index == luna_stopstart_a || sprite_index == luna_stopstart_b) 
{
if image_index=0 {hatindex=0} if image_index=1 {hatindex=2} if image_index=2 {hatindex=4}
if image_index=3 {hatindex=6} if image_index=4 {hatindex=8} if image_index=5 {hatindex=10}
if image_index=6 {hatindex=6} if image_index=7 {hatindex=2} if image_index=8 {hatindex=0}
if image_index=9 {hatindex=0} if image_index=10 {hatindex=0} 
}
else hatindex=0
} 

if (hatscale=-1) 
{
if (sprite_index == luna_run || sprite_index == luna_run_a || sprite_index == luna_run_b) 
{
hatindex=11
}
else if (sprite_index == luna_stopstart || sprite_index == luna_stopstart_a || sprite_index == luna_stopstart_b) 
{
if image_index=0 {hatindex=1} if image_index=1 {hatindex=3} if image_index=2 {hatindex=5}
if image_index=3 {hatindex=7} if image_index=4 {hatindex=9} if image_index=5 {hatindex=11}
if image_index=6 {hatindex=7} if image_index=7 {hatindex=3} if image_index=8 {hatindex=1}
if image_index=9 {hatindex=1} if image_index=10 {hatindex=1} 
}
else hatindex=1
}
draw_sprite_ext(luna_hat,hatindex,player.x + xcor[i_off, ii], player.y + ycor[i_off, ii],image_xscale, image_yscale,0,c_white,image_alpha);


if (spanim=0)
{
if (global.weaponstyle=1)
{
if (chararm.image_index&gt;=3 and chararm.image_index&lt;=8) {draw_sprite_ext(chararm.sprite_index,chararm.image_index,chararm.x,chararm.y,chararm.image_xscale,chararm.image_yscale,chararm.image_angle,chararm.image_blend,chararm.image_alpha)}
}
if (global.weaponstyle=2)
{
if (char_luna.x&lt;mouse_x)
{
draw_sprite_ext(luna_projector,0,chararm.x+lengthdir_x(11,chararm.direction),chararm.y+4+lengthdir_y(10,chararm.direction),chararm.image_xscale,chararm.image_yscale,chararm.image_angle,c_white,chararm.image_alpha)
if umbrella=false
{
draw_sprite_ext(luna_projectorhand1,0,chararm.x-6,chararm.y,chararm.image_xscale,chararm.image_yscale,chararm.image_angle,chararm.image_blend,chararm.image_alpha)
}
}
else 
{
draw_sprite_ext(luna_projector,0,chararm.x+lengthdir_x(11,chararm.direction),chararm.y+4+lengthdir_y(10,chararm.direction),chararm.image_xscale,chararm.image_yscale,chararm.image_angle,c_white,chararm.image_alpha)
if umbrella=false
{
draw_sprite_ext(luna_projectorhand1,0,chararm.x+6,chararm.y,chararm.image_xscale,chararm.image_yscale,chararm.image_angle,chararm.image_blend,chararm.image_alpha)
}
}
}
}

if umbrella=true
{
if flashlight=true {draw_sprite_ext(s_umbrella,0,x,y-35,image_xscale,image_yscale,image_angle,image_blend,image_alpha)} else {draw_sprite_ext(s_umbrella,1,x,y-35,image_xscale,image_yscale,image_angle,image_blend,image_alpha)}
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.getwings=false)
{
if( place_free(x,y+1) &amp;&amp; double_jump = 1 )
{ 
double_jump=0;
yspeed = -jumpHeight;
xspeed = xmaxspeed * (0 - keyboard_check(ord('A')) + keyboard_check(ord('D')));

part_emitter_region(particles.Starter_Depth0,particles.Emitter4,self.x,self.x,self.y+10,self.y+10,ps_shape_rectangle,25)
part_emitter_burst(particles.Starter_Depth0,particles.Emitter4,particles.Particle4,5)
} 
}

if (global.getwings=true)
{
if( place_free(x,y+1) &amp;&amp; double_jump = 1 )
{ 
double_jump=2;
yspeed = -jumpHeight;
xspeed = xmaxspeed * (0 - keyboard_check(ord('A')) + keyboard_check(ord('D')));

part_emitter_region(particles.Starter_Depth0,particles.Emitter4,self.x,self.x,self.y+10,self.y+10,ps_shape_rectangle,25)
part_emitter_burst(particles.Starter_Depth0,particles.Emitter4,particles.Particle4,5)
} 
else
if( place_free(x,y+1) &amp;&amp; double_jump = 2 )
{ 
double_jump=0;
yspeed = -jumpHeight;
xspeed = xmaxspeed * (0 - keyboard_check(ord('A')) + keyboard_check(ord('D')));

part_emitter_region(particles.Starter_Depth0,particles.Emitter7,self.x,self.x,self.y,self.y,ps_shape_rectangle,1)
part_emitter_burst(particles.Starter_Depth0,particles.Emitter7,particles.Particle7,15)
} 
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
