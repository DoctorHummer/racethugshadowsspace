<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>velvet_idle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>playerpar</parentName>
  <maskName>vv_mask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>xfriction=0.5 accel=0.4
xspeed=0 yspeed=0
xmaxspeed=3 ymaxspeed=12
isJumping=false
dir=1
landing=0 landing_max=1
jumpHeight=6
weight=0.3

hitfromright=0
double_jump=1
t = 40; //invincibility

attack=0; //attack type (0 - nothing, 1 - melee slash, 2 - throwing)
attacktimer=0; //attack timer

hitted=0 //frames when velvet got hitted animation
gethit=0;

trail_x = ds_list_create();
trail_y = ds_list_create();
trail_limit = 6;

jumptimer=0;
slidealpha=0

dead=false 
shroompitch=0.8

shrJumping=false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
bessmertie=0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !dead and (!instance_exists(transition_par) or (instance_exists(sys_transition) and sys_transition.step&gt;sys_transition.time/2))
{
xspeed = iff(abs(xspeed) &gt; xmaxspeed, xmaxspeed * sign(xspeed), xspeed);
yspeed = iff(abs(yspeed) &gt; ymaxspeed, ymaxspeed * sign(yspeed), yspeed);

if place_free(x, y + yspeed) { y += yspeed; }
else {
  if (yspeed &gt; 0) {
    isJumping = false;
  shrJumping = false;
    landing = landing_max;
    double_jump=1;
    y = floor(y);
  }
  move_contact_solid(point_direction(x, y, x, y + yspeed), yspeed);
  yspeed = 0;
}

//if (x &lt; 0) x = 0;
//if (x &gt; room_width) x = room_width;

  if (place_free(x, y + 1)) {
    yspeed += weight;

    if ((!keyboard_check(global.controljump)) &amp;&amp; isJumping &amp;&amp; (yspeed &lt; -jumpHeight / 2)) {
      yspeed = -jumpHeight / 3;
    }
  }
  else {
    if (keyboard_check_pressed(global.controljump)) {
      yspeed = -jumpHeight;
      xspeed = xmaxspeed * (0 - keyboard_check(global.controlleft) + keyboard_check(global.controlright));
      double_jump=1;
      isJumping = true;
      audio_play_sound(jump,0.5,false)
    }
  } //jump and falling
  
  if (place_free(x + xspeed, y)) { x += xspeed; } 
  else {
    move_contact_solid(point_direction(x, y, x + xspeed, y), xspeed);
    xspeed = 0;
  } //moving
  
  if (keyboard_check(global.controlleft) &amp;&amp; xspeed &gt; -xmaxspeed &amp;&amp; dir == -1) {
    xspeed -= accel;
  }
  if (keyboard_check(global.controlright) &amp;&amp; xspeed &lt; xmaxspeed &amp;&amp; dir == 1) {
    xspeed += accel;
  }
  //acceleration
  
  if hitted&gt;10
  {
  if (hitfromright==0) {
    xspeed -= xmaxspeed*2;
  }
  if (hitfromright==1) {
    xspeed += xmaxspeed*2;
  }//get hit
  }
  
  if (!keyboard_check(global.controlleft) &amp;&amp; !keyboard_check(global.controlright)) {
    if (abs(xspeed) &gt; xfriction) {
      xspeed -= sign(xspeed) * xfriction;
    } else {
      xspeed = 0;
    }
  }//friction
  
  if hitted=0
  {
  if (keyboard_check_pressed(global.controljump) and global.unlockedjump)
  {
    if( place_free(x,y+1) &amp;&amp; double_jump = 1 )
      { 
        double_jump=0;
        image_index=0;
        yspeed = -jumpHeight;
        xspeed = xmaxspeed * (0 - keyboard_check(global.controlleft) + keyboard_check(global.controlright));
        if (!audio_is_playing(doublejump)){audio_play_sound(doublejump,0.5,false)}
      } 
  }
  if attack=0
  {
  if (keyboard_check_pressed(global.controlattack))
    {
      if keyboard_check(global.controlup)
      {
        if global.unlockedthrow { image_index=0 attacktimer=24 attack=2 audio_play_sound(v_attack,0.5,false); }
        else 
        { image_index=0 attacktimer=24 attack=1 audio_play_sound(v_attack,0.5,false); }
      }
      else 
      { image_index=0 attacktimer=24 attack=1 audio_play_sound(v_attack,0.5,false); }
    }
  }
  }
  //double jump and attacks
}
  
  if (keyboard_check_pressed(global.controlleft) || (keyboard_check(global.controlleft) &amp;&amp; keyboard_check_released(global.controlright))) {
    dir = -1;
  }
  if (keyboard_check_pressed(global.controlright) || (keyboard_check(global.controlright) &amp;&amp; keyboard_check_released(global.controlleft))) {
    dir = 1; 
  }
  //change direction

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if attack=0
{
  if !place_free(x,y+4) and (!isJumping and !shrJumping)
  {
    if xspeed=0 { sprite_index = velvet_idle; } // Idle. 
    else {
      // Running.
      if (sign(xspeed) = sign(dir)) { sprite_index = velvet_run; } 
      else {
        sprite_index = velvet_skid;// Skidding.
      //with instance_create(x+10*image_xscale,y+16+random(3),cloud) {sprite_index=clouds1}
      }
    }
  }
  else 
  {
    // Jumping.
    sprite_index = velvet_jump;
    image_index = 1 + sign(yspeed);
    if (abs(yspeed) &lt; 2) { image_index = 1; }
  }
  // Landing.
  if (landing &gt; 0) 
  {
    //sprite_index = velvet_land;
    landing -= 1;
    with instance_create(x,y+17,cloud) {sprite_index=stopclouds image_speed=0.5}
    audio_play_sound(jumpstop,0.3,false)
  }

  // Handle image direction.
  image_xscale = dir;

if hitted&gt;0 {hitted-=0.5; sprite_index=velvet_hit if (place_meeting(playerpar.x, playerpar.y+1, cube)){hitted=0; yspeed=0}}

}

if attack=1
{
  if !place_free(x,y+4) sprite_index=velvet_attack else sprite_index=velvet_jumpattack
  image_speed = 0.25;
  if attacktimer=14 
  {
    if image_xscale=1 
    {with instance_create(velvet.x+3,velvet.y+4,attackhitbox) {image_xscale=0.8 image_yscale=0.75 right=true}} 
    else 
    {with instance_create(velvet.x-3,velvet.y+4,attackhitbox) {image_xscale=-0.8 image_yscale=0.75  right=false}}
  }
  attacktimer--
}
if attack=2
{
  if !place_free(x,y+4) sprite_index=velvet_throw else sprite_index=velvet_jumpthrow
  image_speed = 0.25;
  if attacktimer=9 
  {
    if image_xscale=1 {with instance_create(velvet.x+5,velvet.y-3,spear) {image_xscale=1 speed=7 direction=0}} 
    else 
    {with instance_create(velvet.x-5,velvet.y-3,spear) {image_xscale=-1 speed=7 direction=180}}
  }
  attacktimer--
}
if attacktimer=0
{
  attack=0
}

if (attack&gt;0 and !place_meeting(x,y+1,cube)) or attack=0 {xmaxspeed = 3} else {xmaxspeed = 0}

if jumptimer&gt;0 {jumptimer--}

// Configure image speeds.
image_speed = 0.2;

if (sprite_index == velvet_idle) { image_speed = 0.05; }

if instance_exists(transition_par)
{
  image_speed = 0.2;

  if (sprite_index == velvet_jump or sprite_index == velvet_attack or sprite_index == velvet_throw) image_speed = 0;
  if (sprite_index == velvet_idle) image_speed = 0.1;
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.hp&lt;=0 and !dead){with(instance_create(x,y,velvet_death)){image_xscale=other.image_xscale}; dead=true xspeed=0 yspeed=0}
if room=l1_tree and y&gt;view_yview[0]+view_hview[0]+18 and !dead and !instance_exists(transition_par) {audio_play_sound(fallfromtree,0.5,false); instance_create(view_xview,view_yview,transit) dead=true xspeed=0 yspeed=0}

if !dead
{
if t &lt; 40
{

if (t=2 || t=6 || t=10 || t=14 || t=18 || t=22 || t=26 || t=30 || t&gt;32 )
{image_alpha=0.1}
if (t=4 || t=8 || t=12 || t=16 || t=20 || t=24|| t=28 || t=32 )
{image_alpha=1}
t+=0.5; //counts down to when the velvet stops flashing, ignoring the clumsy "alarm" feature

}

if t = 40
{
image_alpha = 1;
}
}
if dead {image_alpha=0}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="fallblock">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !dead and !instance_exists(transition_par)
{
audio_play_sound(fallfromtree,0.5,false); 
instance_create(view_xview,view_yview,transit) 
dead=true xspeed=0 yspeed=0
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="spikes">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !other.fake
{
if !dead and !instance_exists(transition_par)
{
if t=40
{
hitfromright=2

if global.hp=6 {h=instance_create(view_xview+48,view_yview+16,blastedheart) h.xx=48 h.yy=16 h.hspeed=5 h.vspeed=-3 h.image_index=2}
if global.hp=5 {h=instance_create(view_xview+48,view_yview+16,blastedheart) h.xx=48 h.yy=16 h.hspeed=2 h.vspeed=-3 h.image_index=1}
if global.hp=4 {h=instance_create(view_xview+32,view_yview+16,blastedheart) h.xx=32 h.yy=16 h.hspeed=5 h.vspeed=-3 h.image_index=2}
if global.hp=3 {h=instance_create(view_xview+32,view_yview+16,blastedheart) h.xx=32 h.yy=16 h.hspeed=2 h.vspeed=-3 h.image_index=1}
if global.hp=2 {h=instance_create(view_xview+16,view_yview+16,blastedheart) h.xx=16 h.yy=16 h.hspeed=5 h.vspeed=-3 h.image_index=2}
if global.hp=1 {h=instance_create(view_xview+16,view_yview+16,blastedheart) h.xx=16 h.yy=16 h.hspeed=2 h.vspeed=-3 h.image_index=1}
hitted=15
global.hp--;
yspeed = -jumpHeight*0.8;
isJumping = false;
t=0;
audio_play_sound(playerhit,0.5,false)
}
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="shroom">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !other.unlockable or (other.unlockable and global.unshroom=1)
{
if !dead and !instance_exists(transition_par)
{
if (y&lt;other.y and other.stimer=0 and jumptimer=0)
{
hitted=0
jumptimer=3
if shroompitch&lt;1.2 shroompitch+=0.1 else shroompitch=0.8
ind=audio_play_sound(shroomjump,0.5,false);
audio_sound_pitch(ind, shroompitch);
other.stimer=12; other.t=1;
yspeed = -jumpHeight*1.3;
xspeed = xmaxspeed * (0 - keyboard_check(ord('A')) + keyboard_check(ord('D')));
isJumping = false;
double_jump=1;
shrJumping = true;
}
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="enemiehitbox">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !dead and !instance_exists(transition_par)
{
if t=40
{
var ww=(sprite_get_bbox_left(other.sprite_index) - sprite_get_bbox_right(other.sprite_index))/2;
if (xprevious&gt;other.x-ww) {hitfromright=1}
else if (xprevious&lt;other.x+ww) {hitfromright=0}
else {hitfromright=2}

if global.hp=6 {h=instance_create(view_xview+48,view_yview+16,blastedheart) h.xx=48 h.yy=16 h.hspeed=5 h.vspeed=-3 h.image_index=2}
if global.hp=5 {h=instance_create(view_xview+48,view_yview+16,blastedheart) h.xx=48 h.yy=16 h.hspeed=2 h.vspeed=-3 h.image_index=1}
if global.hp=4 {h=instance_create(view_xview+32,view_yview+16,blastedheart) h.xx=32 h.yy=16 h.hspeed=5 h.vspeed=-3 h.image_index=2}
if global.hp=3 {h=instance_create(view_xview+32,view_yview+16,blastedheart) h.xx=32 h.yy=16 h.hspeed=2 h.vspeed=-3 h.image_index=1}
if global.hp=2 {h=instance_create(view_xview+16,view_yview+16,blastedheart) h.xx=16 h.yy=16 h.hspeed=5 h.vspeed=-3 h.image_index=2}
if global.hp=1 {h=instance_create(view_xview+16,view_yview+16,blastedheart) h.xx=16 h.yy=16 h.hspeed=2 h.vspeed=-3 h.image_index=1}
hitted=15
global.hp--;
yspeed = -jumpHeight*1;

t=0;
audio_play_sound(playerhit,0.5,false)
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="parenemyshot">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !dead and !instance_exists(transition_par)
{
var ww=(sprite_get_bbox_left(other.sprite_index) - sprite_get_bbox_right(other.sprite_index))/2;
if (xprevious&gt;other.x-ww) {hitfromright=1}
else if (xprevious&lt;other.x+ww) {hitfromright=0}
else {hitfromright=2}
if t=40
{
if object_get_name(other.object_index)="potty"
{
with (other)
{
audio_play_sound(enemycloud,0.5,false)
instance_destroy()
}
}
if global.hp=6 {h=instance_create(view_xview+48,view_yview+16,blastedheart) h.xx=48 h.yy=16 h.hspeed=5 h.vspeed=-3 h.image_index=2}
if global.hp=5 {h=instance_create(view_xview+48,view_yview+16,blastedheart) h.xx=48 h.yy=16 h.hspeed=2 h.vspeed=-3 h.image_index=1}
if global.hp=4 {h=instance_create(view_xview+32,view_yview+16,blastedheart) h.xx=32 h.yy=16 h.hspeed=5 h.vspeed=-3 h.image_index=2}
if global.hp=3 {h=instance_create(view_xview+32,view_yview+16,blastedheart) h.xx=32 h.yy=16 h.hspeed=2 h.vspeed=-3 h.image_index=1}
if global.hp=2 {h=instance_create(view_xview+16,view_yview+16,blastedheart) h.xx=16 h.yy=16 h.hspeed=5 h.vspeed=-3 h.image_index=2}
if global.hp=1 {h=instance_create(view_xview+16,view_yview+16,blastedheart) h.xx=16 h.yy=16 h.hspeed=2 h.vspeed=-3 h.image_index=1}
hitted=15
global.hp--;
yspeed = -jumpHeight*0.75;

t=0;
audio_play_sound(playerhit,0.5,false)
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="parmonster">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !dead and !instance_exists(transition_par)
{
if t=40
{
var ww=(sprite_get_bbox_left(other.sprite_index) - sprite_get_bbox_right(other.sprite_index))/2;
if (xprevious&gt;other.x-ww) {hitfromright=1}
else if (xprevious&lt;other.x+ww) {hitfromright=0}
else {hitfromright=2}

if global.hp=6 {h=instance_create(view_xview+48,view_yview+16,blastedheart) h.xx=48 h.yy=16 h.hspeed=5 h.vspeed=-3 h.image_index=2}
if global.hp=5 {h=instance_create(view_xview+48,view_yview+16,blastedheart) h.xx=48 h.yy=16 h.hspeed=2 h.vspeed=-3 h.image_index=1}
if global.hp=4 {h=instance_create(view_xview+32,view_yview+16,blastedheart) h.xx=32 h.yy=16 h.hspeed=5 h.vspeed=-3 h.image_index=2}
if global.hp=3 {h=instance_create(view_xview+32,view_yview+16,blastedheart) h.xx=32 h.yy=16 h.hspeed=2 h.vspeed=-3 h.image_index=1}
if global.hp=2 {h=instance_create(view_xview+16,view_yview+16,blastedheart) h.xx=16 h.yy=16 h.hspeed=5 h.vspeed=-3 h.image_index=2}
if global.hp=1 {h=instance_create(view_xview+16,view_yview+16,blastedheart) h.xx=16 h.yy=16 h.hspeed=2 h.vspeed=-3 h.image_index=1}
hitted=15
global.hp--;
yspeed = -jumpHeight*0.75;

t=0;
audio_play_sound(playerhit,0.5,false)
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="pickupheart">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.hp=global.maxhp-1 {global.hp++}
if global.hp&lt;=global.maxhp-2 {global.hp+=2}
s1=instance_create(other.x,other.y,phstar) s1.speed=2 s1.direction=45
s2=instance_create(other.x,other.y,phstar) s2.speed=2 s2.direction=135
s3=instance_create(other.x,other.y,phstar) s3.speed=2 s3.direction=225
s4=instance_create(other.x,other.y,phstar) s4.speed=2 s4.direction=315
audio_play_sound(hpup,0.5,false)
with (other) {instance_destroy()}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="spear_jumper">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !dead and !instance_exists(transition_par)
{
if (y&lt;other.y and other.stimer=0 and jumptimer=0)
{
hitted=0
jumptimer=3
if shroompitch&lt;1.2 shroompitch+=0.1 else shroompitch=0.8
ind=audio_play_sound(shroomjump,0.5,false);
audio_sound_pitch(ind, shroompitch);
other.stimer=8;
yspeed = -jumpHeight*1.2;
xspeed = xmaxspeed * (0 - keyboard_check(ord('A')) + keyboard_check(ord('D')));
isJumping = false;
double_jump=1;
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>playerpar.visible=true
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !dead
{
if double_jump=0
{
if slidealpha&lt;1 {slidealpha+=0.05}

ds_list_add(trail_x, x);
ds_list_add(trail_y, y);

if ds_list_size(trail_x) &gt; trail_limit
{
    ds_list_delete(trail_x,0);
    ds_list_delete(trail_y,0);
}
}
else
{
if slidealpha&gt;0 {slidealpha-=0.1}
}

for(var i=1; i&lt;ds_list_size(trail_x); i++)
{
    draw_set_blend_mode( bm_add );
    draw_sprite_ext(sprite_index,image_index,trail_x[|i],trail_y[|i],image_xscale,image_yscale,image_angle,c_fuchsia,i/trail_limit*slidealpha)
    draw_set_blend_mode( bm_normal );
}

if gethit=0
{
draw_self();
}
if gethit&gt;0
{
d3d_set_fog(true, c_white, 0, 0);
draw_self();
d3d_set_fog(false, c_white, 0, 0);
}
}

//draw_text(x+50,y-32,shrJumping)

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
