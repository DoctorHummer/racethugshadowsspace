<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_horno</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-5</depth>
  <persistent>0</persistent>
  <parentName>parmonster</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hp=3
dead=false
deathimagecount=4;
bessmertie=0
btimer=0
speeed=choose(3.5,3.75,4)

image_angle=random_range(-3,3);k1=0;

tier=2
bounce=0

mode=0
image_alpha=0
image_index=0
image_speed=0
attack=false
timer=0
dashright=true


rt=80

if (global.passedrooms&gt;25 and global.passedrooms&lt;50){rt=90}
if (global.passedrooms&gt;=50){rt=95}


active=false

hitrot=0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//repeat(20)
//

a=instance_create(x,y,mparticles)
a.type=8;
a=instance_create(x,y,mparticles)
a.type=7;
a=instance_create(x,y,hornodead); a.direction=90; a.speed=3; a.image_xscale=image_xscale; a.image_index=0
a=instance_create(x,y,hornodead); a.direction=120; a.speed=5; a.image_xscale=image_xscale; a.image_index=1
a=instance_create(x,y,hornodead); a.direction=60; a.speed=5; a.image_xscale=image_xscale; a.image_index=2

//a=instance_create(x,y,particle)
//a.type=3;
//a.image_xscale=choose(0.1,0.2,0.3)
//a.image_yscale=a.image_xscale
//a.speed=5+random(7)
//a.direction=random(360)
//a.image_alpha=1.5
//a.image_index=1
//}
script_execute(itemdrop);


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if bessmertie=1 {btimer+=1 if btimer&gt;4{btimer=0; bessmertie=0}}

if mode=0 {image_xscale=0 image_yscale=0}

if (distance_to_object(player)&lt;400) {mode=1}

if mode=1 
{
image_yscale=1
if image_alpha&lt;1 {image_alpha+=0.05}
if image_alpha&gt;=1 {active=true}
timer++
if (attack=false and (timer&lt;rt or timer&gt;=130))
{
motion_add(point_direction(x,y,player.x,player.y),.1);
if x&lt;player.x{image_xscale=1; dashright=true}
if x&gt;player.x{image_xscale=-1; dashright=false}
if (speed &gt; speeed){    speed = speeed;}
if (speed &lt; 1.5){    speed = 1.5;}
}
if (attack=false and timer&gt;=rt and timer&lt;=100)
{
motion_add(point_direction(x,y,player.x,player.y),1);
if x&lt;player.x{image_xscale=1; dashright=true}
if x&gt;player.x{image_xscale=-1; dashright=false}
if (speed &gt; 0.5){ speed = 0.5;}
}
if (timer&gt;100 and timer&lt;130 and attack=false) 
{
attack=true; 
if dashright=true {motion_add(0,12)}
if dashright=false {motion_add(180,12)}
}
if (timer&gt;100 and timer&lt;=105) {image_index=1}
if (timer&gt;105 and timer&lt;=125) {image_index=2}
if (timer&gt;125 and timer&lt;=130) {image_index=1}
if timer&gt;=130 {attack=false image_index=0}
if timer&gt;=200 {timer=0}
}

if hp&lt;=0{instance_destroy()}

if random(200)=1{k1=1}
if k1=0{image_angle+=0.16}
if k1=1{image_angle-=0.16}
if image_angle&lt;-2{k1=0}
if image_angle&gt;2{k1=1}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if attack=1
{
dist=point_distance(x,y,xprevious,yprevious)
dire=point_direction(x,y,xprevious,yprevious)
draw_set_blend_mode(bm_add);
draw_sprite_ext(sprite_index,-1,x+lengthdir_x(dist*5,dire),y+lengthdir_y(dist*5,dire),image_xscale,image_yscale,image_angle,c_aqua,0.2)
draw_sprite_ext(sprite_index,-1,x+lengthdir_x(dist*4,dire),y+lengthdir_y(dist*4,dire),image_xscale,image_yscale,image_angle,c_aqua,0.4)
draw_sprite_ext(sprite_index,-1,x+lengthdir_x(dist*3,dire),y+lengthdir_y(dist*3,dire),image_xscale,image_yscale,image_angle,c_aqua,0.6)
draw_sprite_ext(sprite_index,-1,x+lengthdir_x(dist*2,dire),y+lengthdir_y(dist*2,dire),image_xscale,image_yscale,image_angle,c_aqua,0.8)
draw_sprite_ext(sprite_index,-1,x+lengthdir_x(dist*1,dire),y+lengthdir_y(dist*1,dire),image_xscale,image_yscale,image_angle,c_aqua,1)
}
draw_set_blend_mode(bm_normal);
draw_sprite_ext(sprite_index,image_index,x,y,image_xscale,image_yscale,hitrot,c_white,image_alpha)
if bessmertie=1
{
draw_sprite_ext(sprite_index,image_index,x,y,image_xscale,image_yscale,hitrot,c_fuchsia,0.5)
draw_sprite_ext(sprite_index,image_index,x,y,image_xscale*1.1,image_yscale*1.1,hitrot,c_white,0.25)
draw_sprite_ext(sprite_index,image_index,x,y,image_xscale*1.2,image_yscale*1.2,hitrot,c_white,0.15)
}

if image_xscale=1 
{
switch(btimer) {case 0: hitrot=0 break; case 1: hitrot=5 break; case 2: hitrot=10 break; case 3: hitrot=15 break; case 4: hitrot=10 break; case 5: hitrot=5 break;}
}
else
{
switch(btimer) {case 0: hitrot=0 break; case 1: hitrot=355 break; case 2: hitrot=350 break; case 3: hitrot=345 break; case 4: hitrot=350 break; case 5: hitrot=355 break;}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
