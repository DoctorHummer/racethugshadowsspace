<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>door</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>active=1
gearot=0;
roomup=0;
doortype=0;
col = make_color_rgb(0,0,0);
glxscale=0.6
glyscale=0.6
w=0
if doortype=1
{
col = make_color_rgb(255,255,51);
}
if doortype=2
{
col = make_color_rgb(0, 191, 255);
}
if doortype=3
{
col = make_color_rgb(255, 0, 0);
}
if doortype=4
{
col = make_color_rgb(255, 0, 255);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if active&gt;0 
{
image_xscale=-1
image_yscale=-1
if roomup&lt;192{roomup+=4}else{active=2}
}
if active=1 {gearot+=3}

if doortype=1
{
col = make_color_rgb(255,255,51);
}
if doortype=2
{
col = make_color_rgb(0, 191, 255);
}
if doortype=3
{
col = make_color_rgb(255, 0, 0);
}
if doortype=4
{
col = make_color_rgb(255, 0, 255);
}

glyscale=glxscale
if w=0{glxscale+=0.005; if glxscale=1{w=1}}
if w=1{glxscale-=0.005; if glxscale=0.6{w=0}}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if image_angle=0 {draw_sprite_ext(door,1,x,y-roomup,1,1,image_angle,c_white,1);}
if image_angle=90 {draw_sprite_ext(door,1,x-roomup,y,1,1,image_angle,c_white,1);}
if image_angle=180 {draw_sprite_ext(door,1,x,y+roomup,1,1,image_angle,c_white,1);}
if image_angle=270 {draw_sprite_ext(door,1,x+roomup,y,1,1,image_angle,c_white,1);}
draw_sprite_ext(door,0,x,y,1,1,image_angle,c_white,1);
if doortype=0
{
if image_angle=0 {draw_sprite_ext(gear,0,x-13,y-13,1,1,gearot,c_white,1);}
if image_angle=90 {draw_sprite_ext(gear,0,x-13,y+13,1,1,gearot,c_white,1);}
if image_angle=180 {draw_sprite_ext(gear,0,x+13,y+13,1,1,gearot,c_white,1);}
if image_angle=270 {draw_sprite_ext(gear,0,x+13,y-13,1,1,gearot,c_white,1);}
}
if doortype&gt;0
{
if image_angle=0 {draw_sprite_ext(lightballsprite,0,x-15,y-15,glxscale,glyscale,image_angle,col,0.6) draw_sprite_ext(doorgem,0,x-15,y-15,1,1,0,col,1);}
if image_angle=90 {draw_sprite_ext(lightballsprite,0,x-15,y+15,glxscale,glyscale,image_angle,col,0.6) draw_sprite_ext(doorgem,0,x-15,y+15,1,1,0,col,1);}
if image_angle=180 {draw_sprite_ext(lightballsprite,0,x+15,y+15,glxscale,glyscale,image_angle,col,0.6) draw_sprite_ext(doorgem,0,x+15,y+15,1,1,0,col,1);}
if image_angle=270 {draw_sprite_ext(lightballsprite,0,x+15,y-15,glxscale,glyscale,image_angle,col,0.6) draw_sprite_ext(doorgem,0,x+15,y-15,1,1,0,col,1);}
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
